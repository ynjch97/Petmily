<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- ******* ******* data source 1 ********* -->
	<!-- jdbc 설정 -->
	<bean id="realDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    	<property name="driverClassName" value="#{configuration['jdbc.driverClass.master']}" />
	    <property name="url" value="#{configuration['jdbc.url.master']}" />
	    <property name="username" value="#{configuration['jdbc.username.master']}" />
	    <property name="password" value="#{configuration['jdbc.password.master']}" />
	    <property name="testOnBorrow" value="true" />
	    <property name="testWhileIdle" value="true" />
	    <property name="validationQuery" value="SELECT 1" />
	    <property name="minIdle" value="10" />
	    <property name="maxIdle" value="50" />
	    <property name="maxActive" value="100" />
	    <property name="maxWait" value="5000" />
	</bean>
	
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="realDataSource" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="SQL=>&#10;" />
			</bean>
		</property>
	</bean>
	
	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:com/ynjch/petmily/mapper/**/*.xml</value>
			</list>
		</property>
		<property name="databaseIdProvider" ref="databaseIdProvider"/>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ynjch.petmily.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- @Transactional 어노테이션에 대한 트랜잭션 처리시 트랜잭션 매니저 transactionManager 빈으로 등록 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- database provider -->
	<bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	    <property name="properties">
	        <props>
	            <prop key="MariaDB">mariadb</prop>
	            <prop key="DB2">db2</prop>
	            <prop key="Oracle">oracle</prop>
	            <prop key="MySQL">mysql</prop>
	        </props>
	    </property>
	</bean>

	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
	    <property name="properties" ref="vendorProperties"/>
	</bean>	
	
</beans>
